# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.1"
  title: Argos-ProductInterface

# Describe your paths here
paths:
  /api/product:
    get:
      description: Gets an array of `ProductFamily` objects.
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfProductFamilies
            type: array
            items:
              title: ProductFamily
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                numberOfDevices:
                  type: integer
                numberOfEvents:
                  type: integer
                productionStart:
                  type: string
                  format: date-time
                state:
                  type: string
                  enum:
                    - RUNNING
                    - WARNING
                    - ERROR
                metaData:
                  type: object
                  properties:
                    label:
                      type: string
                    brand:
                      type: string
                    orderNumber:
                      type: integer
                    statusDescription:
                      type: string
  
  /api/product/{productId}:
    get:
      description: Gets an array of `EventType` objects for a defined `ProductFamily`.
      parameters:
        -
          name: productId
          in: path
          description: Unique identifier for the `ProductFamily`
          required: true
          type: integer
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfEventTypes
            type: array
            items:
              title: EventType
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                numberOfEvents:
                  type: integer
                attributes:
                  title: ArrayOfEventAttributes
                  type: array
                  items:
                    title: EventAttribute
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        
  /api/product/{productId}/eventtype/{eventTypeId}/{indexFrom}/{indexTo}:
    get:
      description: Gets an array of `Event` objects for a defined `ProductFamily` and a defined `EventType` within a certain index range.
      parameters:
        -
          name: productId
          in: path
          description: Unique identifier for the `ProductFamily`
          required: true
          type: integer
        -
          name: eventTypeId
          in: path
          description: Unique identifier for the `EventType`
          required: true
          type: integer
        -
          name: indexFrom
          in: path
          description: Start index for the `Event` objects to receive
          required: true
          type: integer
        -
          name: indexTo
          in: path
          description: End index for the `Event` objects to receive
          required: true
          type: integer
          
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfEvents
            type: array
            items:
              title: Event
              type: object
              description: Instance of specified EventType